
package listener;

import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Enumeration;
import java.util.logging.Logger;

import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import javax.servlet.annotation.WebListener;

@WebListener
public class ServletContextListener implements javax.servlet.ServletContextListener {
	
	private static final Logger logger = Logger.getLogger(ServletContextListener.class.getName());
	
	public void contextInitialized(ServletContextEvent event) {
		
		logger.info("Creating DB");
		Connection conn = null;
		
		try {
			Class.forName("org.hsqldb.jdbcDriver");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		try {
			ServletContext sc = event.getServletContext();
			
			conn = DriverManager.getConnection("jdbc:hsqldb:file:" + sc.getRealPath("WEB-INF/dsh/"),
													"sa", // username
													""); //password

			Statement stmt = conn.createStatement();
			
			//Init db schema
			try{
				stmt.executeUpdate("CREATE TABLE IF NOT EXISTS TablaMovil (IDMOVIL INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,"
						+ "DISPOSITIVO VARCHAR(50) UNIQUE NOT NULL, "
						+ "BATERIA INTEGER NOT NULL)" );
				
			}catch(SQLException e) {
				e.printStackTrace();
			}
			
			sc.setAttribute("dbConn", conn);
			
		} catch (SQLException e) {
			e.printStackTrace();
		}                     
		
		logger.info("DB created");
	}
	
    public void contextDestroyed(ServletContextEvent arg0)  { 
		
		logger.info("Destroying DB");
		try {
			logger.info("DB shutdown start");
	   		ServletContext sc = arg0.getServletContext();
	   		Connection conn = (Connection) sc.getAttribute("dbConn");
			Statement stmt = conn.createStatement();
			stmt.executeUpdate("SHUTDOWN");
			conn.close();
			Enumeration<Driver> drivers = DriverManager.getDrivers();
			while (drivers.hasMoreElements()) {
				logger.info("DB deregistering drivers");
				Driver driver = drivers.nextElement();
				try {
					DriverManager.deregisterDriver(driver);
					logger.info(String.format("deregistering jdbc driver: %s", driver));
				} catch (SQLException e) {
					logger.severe(String.format("Error deregistering driver %s %s", driver, e));
				}

			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		logger.info("DB destroyed");
	}
}
